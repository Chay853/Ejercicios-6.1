#       Autor:
# David Osvaldo Chay May
# may876518@gmail.com

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

# Parámetros del problema
T0 = 90        # Temperatura inicial (°C)
T_amb = 25     # Temperatura ambiente (°C)
k = 0.07       # Constante de enfriamiento
t0 = 0
Tf = 30
n = 30         # Número de pasos

# Paso
h = (Tf - t0) / n

# Definición de la EDO: dT/dt = -k(T - T_amb)
def f(t, T):
    return -k * (T - T_amb)

# Solución analítica
def T_exacta(t):
    return T_amb + (T0 - T_amb) * np.exp(-k * t)

# Inicialización de listas para almacenar resultados
t_vals = [t0]
T_vals = [T0]
T_analitica = [T_exacta(t0)]

# Método de Euler
t = t0
T = T0
for i in range(n):
    T = T + h * f(t, T)
    t = t + h
    t_vals.append(t)
    T_vals.append(T)
    T_analitica.append(T_exacta(t))

# Guardar resultados en archivo CSV
data = {
    "t": t_vals,
    "T_aproximada": T_vals,
    "T_analitica": T_analitica
}
df = pd.DataFrame(data)
csv_path = "enfriamiento_resultados.csv"
df.to_csv(csv_path, index=False)

# Graficar la solución aproximada y exacta
plt.figure(figsize=(8, 5))
plt.plot(t_vals, T_vals, 'o-', label='Solución aproximada (Euler)', color='blue')
plt.plot(t_vals, T_analitica, '-', label='Solución exacta', color='green')
plt.title('Enfriamiento de un cuerpo (Ley de Newton)')
plt.xlabel('Tiempo (minutos)')
plt.ylabel('Temperatura (°C)')
plt.grid(True)
plt.legend()
image_path = "enfriamiento_solucion.png"
plt.savefig(image_path)
plt.show()
